<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sIdle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables

changeSpeed = 20; //distance to make walking to running
runFast = 1; //running speed
runSlow= .6; // walking speed
movementSpeed = 0;

//sprite states
IDLE = 0;
RUN = 1;
SEAT = 2;
SMOKE = 3;
DIE = 4;

//dialogues
active = false;
textDuration = 2;

//effects
global.playerReflection = true;


//actions
doing = false;
seat = 0;
canSmoke = false;
smokeTimes = 0;
talk = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// General setup
global.clickLeft = mouse_check_button_pressed(mb_left);

if (place_meeting(x,y,oPointer)) global.clickable = true; 

//click creation
if (global.clickLeft)&amp;&amp;(global.clickable){
    if (!instance_exists(oClick)){
        instance_create(mouse_x,mouse_y,oClick) 
    } else{
        oClick.x = mouse_x;
        oClick.y = mouse_y;
    } 
}

if (instance_exists(oClick)){
    if (distance_to_object(oClick) &gt; changeSpeed){
        movementSpeed = runFast
    }
    else movementSpeed = runSlow;
    global.distance = oClick.x - x;
    //check if facing right or left
    if (state == RUN)&amp;&amp;(doing==false)||(state == IDLE)&amp;&amp;(doing==false){
        if (global.distance &gt;0) image_xscale=1;
        else if (global.distance &lt; 0 ) image_xscale = -1;
    }
    //move 
    
    if (doing == false) move_towards_point(oClick.x,y,movementSpeed);
}
else if !instance_exists(oClick){
    hspeed=0;
    if (doing == false){
        state = IDLE;
    }
}

if (hspeed !=0)&amp;&amp;(doing == false){
    state = RUN;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Actions
if (doing=true){
    switch(action){
        case seat:
            move_towards_point(oChair.x,y,movementSpeed);
            if (distance_to_point(oChair.x+19*image_xscale,oChair.y) &lt;=0){
                hspeed = 0;
                if (canSmoke == false){
                    state = SEAT;
                }
                if (Check_Item(sCigarette,false)){
                    canSmoke = true;
                }
                if (canSmoke == true){
                    state = SMOKE;
                }
                if (state == SMOKE){
                    if (smokeTimes &lt; 4){
                        if (image_index==9) smokeTimes +=1;
                    } else{
                        if (!instance_exists(oGift)) {
                            instance_create(oChair.x,oChair.y-4,oGift);
                            talk = true;
                        }
                        else talk = false;
                    }
                }
            }
        break;
    }
}

if (Check_Item(sGift,true)){
    instance_create(x,y,oKey);
    Add_Item(sKey,oKey.id);
}
if (Check_Item(sSwitch,false)){
    state = DIE;
    hspeed = 0;;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera
Camera_View();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="5" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if window_get_fullscreen()
{
    window_set_fullscreen(false);
}
else
{
    window_set_fullscreen(true);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,0,c_white,image_alpha);

switch (state){
    case IDLE:
        sprite_index = sIdle;
    break;
    
    case RUN:
        if(sprite_index!=sWalk)image_index=0;
        sprite_index = sWalk;
        image_speed = .18;
    break;
    
    case SEAT:
        if(sprite_index!=sSeat)&amp;&amp;(sprite_index!=sSmoke)image_index=0;
        else if (sprite_index!=sSeat)&amp;&amp;(sprite_index=sSmoke)image_index=2;
        image_xscale = 1;
        sprite_index = sSeat;
        image_speed = .15;
        if (image_index &gt;2) image_index = 2;

    break;
    
    case SMOKE:
        if(sprite_index!=sSmoke)image_index=0;
        image_xscale = 1;
        sprite_index = sSmoke;
        image_speed = .18;
        if (image_index &gt;=13){ 
            image_index =13;
            canSmoke = false;
            global.selectedItem = 0;
        }
    break;
    
    case DIE:
        if(sprite_index!=sDie)image_index=0;
        sprite_index = sDie;
        image_speed = .18;
        if (image_index &gt;=12){ 
            image_index =12;
        }
    break;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dialogue

if (talk == true){
    active = true;
    timer = textDuration*room_speed;
}

if (active){
    if (timer &gt; 0){
        Set_Text(dialogue);
        timer--;
    } else {
        active = false;
        talk = false;
    }
}


dialogue = "Ups..."
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
